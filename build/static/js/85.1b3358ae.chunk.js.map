{"version":3,"file":"static/js/85.1b3358ae.chunk.js","mappings":"oSAkIA,EA3HyB,SAACA,GACxB,IAAMC,GAAUC,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,KAAbD,SAER,OACEE,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,KAAM,GACNC,QAAQ,EACRC,OAAQ,MAEVC,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCP,MAAOM,EAAAA,KACJN,MAAM,yBACNQ,IAAI,KACJC,SAAS,qBACZP,KAAMI,EAAAA,KAAaE,IAAI,KAAKC,SAAS,oBACrCR,SAAUK,EAAAA,KAAaI,IAAI,GAAGF,IAAI,KAAKC,SAAS,wBAChDN,OAAQG,EAAAA,KAAcK,MAAM,EAAC,GAAO,gCAEtCC,SAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EACRC,EAAMC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC+B,OAAnCN,EAASD,EAATC,UAAWC,EAASF,EAATE,UAAWC,EAAaH,EAAbG,cAAaE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAG7B/B,EAASuB,EAAOlB,MAAOkB,EAAOhB,KAAMgB,EAAOjB,UAAU,KAAD,EAEtDR,EAAQkC,UACVN,EAAU,CAAEO,SAAS,IACrBN,GAAc,IACfE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEDM,QAAQC,MAAKP,EAAAK,IACbR,EAAU,CAAEO,SAAS,IACrBR,EAAU,CAAEhB,OAAM,OAAAoB,EAAAK,SAAA,IAAAL,EAAAK,QAAA,EAAEL,EAAAK,GAAKG,UACzBV,GAAc,GAAO,yBAAAE,EAAAS,OAAA,GAAAhB,EAAA,kBAExB,gBAAAiB,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,EAjBO,GAiBNC,SAED,SAAAC,GAAA,IACCC,EAAMD,EAANC,OACAC,EAAUF,EAAVE,WACAC,EAAYH,EAAZG,aACAC,EAAYJ,EAAZI,aACAC,EAAYL,EAAZK,aACAC,EAAON,EAAPM,QACA3B,EAAMqB,EAANrB,OAAM,OAEN4B,EAAAA,EAAAA,MAAA,QAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAMC,YAAU,EAACpC,SAAU+B,GAAkBnD,GAAK,IAAA8C,SAAA,EAChDzC,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CACRlB,MAAOmB,QAAQL,EAAQ3C,MAAQsC,EAAOtC,MACtCiD,WAAS,EACTC,WAAYP,EAAQ3C,MAAQsC,EAAOtC,KACnCmD,MAAM,OACNC,OAAO,SACPpD,KAAK,OACLqD,OAAQd,EACRe,SAAUd,EACVe,MAAOvC,EAAOhB,KACdwD,QAAQ,cAEV7D,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CACRlB,MAAOmB,QAAQL,EAAQ7C,OAASwC,EAAOxC,OACvCmD,WAAS,EACTC,WAAYP,EAAQ7C,OAASwC,EAAOxC,MACpCqD,MAAM,QACNC,OAAO,SACPpD,KAAK,QACLqD,OAAQd,EACRe,SAAUd,EACViB,KAAK,QACLF,MAAOvC,EAAOlB,MACd0D,QAAQ,cAEV7D,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CACRlB,MAAOmB,QAAQL,EAAQ5C,UAAYuC,EAAOvC,UAC1CkD,WAAS,EACTC,WAAYP,EAAQ5C,UAAYuC,EAAOvC,SACvCoD,MAAM,WACNC,OAAO,SACPpD,KAAK,WACLqD,OAAQd,EACRe,SAAUd,EACViB,KAAK,WACLF,MAAOvC,EAAOjB,SACdyD,QAAQ,cAEV7D,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CACFC,GAAI,CACFC,WAAY,SACZC,QAAS,OACTC,IAAK,EACLC,GAAI,KAGPf,QAAQL,EAAQ1C,QAAUqC,EAAOrC,UAChCN,EAAAA,EAAAA,KAACqE,EAAAA,EAAc,CAACnC,OAAK,EAAAO,SAAEE,EAAOrC,SAE/BqC,EAAOpC,SACNP,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAI,CAAEI,GAAI,GAAI3B,UACjBzC,EAAAA,EAAAA,KAACqE,EAAAA,EAAc,CAACnC,OAAK,EAAAO,SAAEE,EAAOpC,YAGlCP,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,GAAI,CAAEI,GAAI,GAAI3B,UACjBzC,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,CACLC,MAAM,UACNC,SAAUzB,EACVO,WAAS,EACTmB,KAAK,QACLX,KAAK,SACLD,QAAQ,YAAWpB,SACpB,kBAIE,GAIf,EC5CA,EAtEyB,WACvB,OACEzC,EAAAA,EAAAA,KAAA,OAAAyC,UACEzC,EAAAA,EAAAA,KAAC0E,EAAY,KAiEnB,C","sources":["components/Auth/Registration.tsx","pages/auth/RegisterPage.tsx"],"sourcesContent":["import type { FC } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { Box, Button, FormHelperText, TextField } from \"@mui/material\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useMounted from \"../../hooks/useMounted\";\r\n\r\nconst Registration: FC = (props) => {\r\n  const mounted = useMounted();\r\n  const { register } = useAuth() as any;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\",\r\n        policy: false,\r\n        submit: null,\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Must be a valid email\")\r\n          .max(255)\r\n          .required(\"Email is required\"),\r\n        role: Yup.string().max(255).required(\"role is required\"),\r\n        password: Yup.string().min(7).max(255).required(\"Password is required\"),\r\n        policy: Yup.boolean().oneOf([true], \"This field must be checked\"),\r\n      })}\r\n      onSubmit={async (\r\n        values,\r\n        { setErrors, setStatus, setSubmitting }\r\n      ): Promise<void> => {\r\n        try {\r\n          await register(values.email, values.role, values.password);\r\n\r\n          if (mounted.current) {\r\n            setStatus({ success: true });\r\n            setSubmitting(false);\r\n          }\r\n        } catch (err: any) {\r\n          console.error(err);\r\n          setStatus({ success: false });\r\n          setErrors({ submit: err?.message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values,\r\n      }): JSX.Element => (\r\n        <form noValidate onSubmit={handleSubmit} {...props}>\r\n          <TextField\r\n            error={Boolean(touched.role && errors.role)}\r\n            fullWidth\r\n            helperText={touched.role && errors.role}\r\n            label=\"role\"\r\n            margin=\"normal\"\r\n            role=\"role\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            value={values.role}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.email && errors.email)}\r\n            fullWidth\r\n            helperText={touched.email && errors.email}\r\n            label=\"Email\"\r\n            margin=\"normal\"\r\n            role=\"email\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"email\"\r\n            value={values.email}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            error={Boolean(touched.password && errors.password)}\r\n            fullWidth\r\n            helperText={touched.password && errors.password}\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            role=\"password\"\r\n            onBlur={handleBlur}\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <Box\r\n            sx={{\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              ml: -1,\r\n              mt: 2,\r\n            }}\r\n          ></Box>\r\n          {Boolean(touched.policy && errors.policy) && (\r\n            <FormHelperText error>{errors.policy}</FormHelperText>\r\n          )}\r\n          {errors.submit && (\r\n            <Box sx={{ mt: 3 }}>\r\n              <FormHelperText error>{errors.submit}</FormHelperText>\r\n            </Box>\r\n          )}\r\n          <Box sx={{ mt: 2 }}>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={isSubmitting}\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Register\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import type { FC } from \"react\";\r\n// import { Link as RouterLink } from \"react-router-dom\";\r\n// import {\r\n//   Box,\r\n//   Card,\r\n//   CardContent,\r\n//   Container,\r\n//   Divider,\r\n//   Link,\r\n//   Typography,\r\n// } from \"@mui/material\";\r\n\r\nimport Registration from \"../../components/Auth/Registration\";\r\n\r\nconst RegisterPage: FC = () => {\r\n  return (\r\n    <div>\r\n      <Registration />\r\n    </div>\r\n    // <Box\r\n    //   sx={{\r\n    //     backgroundColor: \"background.default\",\r\n    //     display: \"flex\",\r\n    //     flexDirection: \"column\",\r\n    //     minHeight: \"100vh\",\r\n    //   }}\r\n    // >\r\n    //   <Container maxWidth=\"sm\" sx={{ py: \"80px\" }}>\r\n    //     <Box\r\n    //       sx={{\r\n    //         mb: 8,\r\n    //         display: \"flex\",\r\n    //         justifyContent: \"center\",\r\n    //       }}\r\n    //     ></Box>\r\n    //     <Card>\r\n    //       <CardContent\r\n    //         sx={{\r\n    //           display: \"flex\",\r\n    //           flexDirection: \"column\",\r\n    //           p: 4,\r\n    //         }}\r\n    //       >\r\n    //         <Box\r\n    //           sx={{\r\n    //             alignItems: \"center\",\r\n    //             display: \"flex\",\r\n    //             justifyContent: \"space-between\",\r\n    //             mb: 3,\r\n    //           }}\r\n    //         >\r\n    //           <div>\r\n    //             <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\r\n    //               Register\r\n    //             </Typography>\r\n    //             <Typography color=\"textSecondary\" variant=\"body2\">\r\n    //               Register on the internal platform\r\n    //             </Typography>\r\n    //           </div>\r\n    //         </Box>\r\n    //         <Box\r\n    //           sx={{\r\n    //             flexGrow: 1,\r\n    //             mt: 3,\r\n    //           }}\r\n    //         >\r\n    //           <RegisterJWT />\r\n    //         </Box>\r\n    //         <Divider sx={{ my: 3 }} />\r\n    //         <Link\r\n    //           color=\"textSecondary\"\r\n    //           component={RouterLink}\r\n    //           to=\"/authentication/login\"\r\n    //           variant=\"body2\"\r\n    //         >\r\n    //           Having an account\r\n    //         </Link>\r\n    //       </CardContent>\r\n    //     </Card>\r\n    //   </Container>\r\n    // </Box>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["props","mounted","useMounted","register","useAuth","_jsx","Formik","initialValues","email","password","role","policy","submit","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","setErrors","setStatus","setSubmitting","wrap","_context","prev","next","current","success","t0","console","error","message","stop","_x","_x2","apply","arguments","children","_ref4","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_jsxs","_objectSpread","noValidate","TextField","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","value","variant","type","Box","sx","alignItems","display","ml","mt","FormHelperText","Button","color","disabled","size","Registration"],"sourceRoot":""}